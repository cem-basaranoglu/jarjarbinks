// Code generated by MockGen. DO NOT EDIT.
// Source: configuration_source.go

// Package mockv is a generated GoMock package.
package mock

import (
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
)

// MockConfigurationSource is a mock of ConfigurationSource interface.
type MockConfigurationSource struct {
	ctrl     *gomock.Controller
	recorder *MockConfigurationSourceMockRecorder
}

// MockConfigurationSourceMockRecorder is the mock recorder for MockConfigurationSource.
type MockConfigurationSourceMockRecorder struct {
	mock *MockConfigurationSource
}

// NewMockConfigurationSource creates a new mock instance.
func NewMockConfigurationSource(ctrl *gomock.Controller) *MockConfigurationSource {
	mock := &MockConfigurationSource{ctrl: ctrl}
	mock.recorder = &MockConfigurationSourceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConfigurationSource) EXPECT() *MockConfigurationSourceMockRecorder {
	return m.recorder
}

// GetBooleanValueByKey mocks base method.
func (m *MockConfigurationSource) GetBooleanValueByKey(key string) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBooleanValueByKey", key)
	ret0, _ := ret[0].(bool)
	return ret0
}

// GetBooleanValueByKey indicates an expected call of GetBooleanValueByKey.
func (mr *MockConfigurationSourceMockRecorder) GetBooleanValueByKey(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBooleanValueByKey", reflect.TypeOf((*MockConfigurationSource)(nil).GetBooleanValueByKey), key)
}

// GetDurationValueByKey mocks base method.
func (m *MockConfigurationSource) GetDurationValueByKey(key string) time.Duration {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDurationValueByKey", key)
	ret0, _ := ret[0].(time.Duration)
	return ret0
}

// GetDurationValueByKey indicates an expected call of GetDurationValueByKey.
func (mr *MockConfigurationSourceMockRecorder) GetDurationValueByKey(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDurationValueByKey", reflect.TypeOf((*MockConfigurationSource)(nil).GetDurationValueByKey), key)
}

// GetFloatValueByKey mocks base method.
func (m *MockConfigurationSource) GetFloatValueByKey(key string) float64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFloatValueByKey", key)
	ret0, _ := ret[0].(float64)
	return ret0
}

// GetFloatValueByKey indicates an expected call of GetFloatValueByKey.
func (mr *MockConfigurationSourceMockRecorder) GetFloatValueByKey(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFloatValueByKey", reflect.TypeOf((*MockConfigurationSource)(nil).GetFloatValueByKey), key)
}

// GetInt64ValueByKey mocks base method.
func (m *MockConfigurationSource) GetInt64ValueByKey(key string) int64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInt64ValueByKey", key)
	ret0, _ := ret[0].(int64)
	return ret0
}

// GetInt64ValueByKey indicates an expected call of GetInt64ValueByKey.
func (mr *MockConfigurationSourceMockRecorder) GetInt64ValueByKey(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInt64ValueByKey", reflect.TypeOf((*MockConfigurationSource)(nil).GetInt64ValueByKey), key)
}

// GetIntArrayValueByKey mocks base method.
func (m *MockConfigurationSource) GetIntArrayValueByKey(key string) []int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetIntArrayValueByKey", key)
	ret0, _ := ret[0].([]int)
	return ret0
}

// GetIntArrayValueByKey indicates an expected call of GetIntArrayValueByKey.
func (mr *MockConfigurationSourceMockRecorder) GetIntArrayValueByKey(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetIntArrayValueByKey", reflect.TypeOf((*MockConfigurationSource)(nil).GetIntArrayValueByKey), key)
}

// GetIntValueByKey mocks base method.
func (m *MockConfigurationSource) GetIntValueByKey(key string) int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetIntValueByKey", key)
	ret0, _ := ret[0].(int)
	return ret0
}

// GetIntValueByKey indicates an expected call of GetIntValueByKey.
func (mr *MockConfigurationSourceMockRecorder) GetIntValueByKey(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetIntValueByKey", reflect.TypeOf((*MockConfigurationSource)(nil).GetIntValueByKey), key)
}

// GetStringArrayValueByKey mocks base method.
func (m *MockConfigurationSource) GetStringArrayValueByKey(key string) []string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStringArrayValueByKey", key)
	ret0, _ := ret[0].([]string)
	return ret0
}

// GetStringArrayValueByKey indicates an expected call of GetStringArrayValueByKey.
func (mr *MockConfigurationSourceMockRecorder) GetStringArrayValueByKey(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStringArrayValueByKey", reflect.TypeOf((*MockConfigurationSource)(nil).GetStringArrayValueByKey), key)
}

// GetStringValueByKey mocks base method.
func (m *MockConfigurationSource) GetStringValueByKey(key string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStringValueByKey", key)
	ret0, _ := ret[0].(string)
	return ret0
}

// GetStringValueByKey indicates an expected call of GetStringValueByKey.
func (mr *MockConfigurationSourceMockRecorder) GetStringValueByKey(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStringValueByKey", reflect.TypeOf((*MockConfigurationSource)(nil).GetStringValueByKey), key)
}

// GetTimeValueByKey mocks base method.
func (m *MockConfigurationSource) GetTimeValueByKey(key string) time.Time {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTimeValueByKey", key)
	ret0, _ := ret[0].(time.Time)
	return ret0
}

// GetTimeValueByKey indicates an expected call of GetTimeValueByKey.
func (mr *MockConfigurationSourceMockRecorder) GetTimeValueByKey(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTimeValueByKey", reflect.TypeOf((*MockConfigurationSource)(nil).GetTimeValueByKey), key)
}

// GetValueByKey mocks base method.
func (m *MockConfigurationSource) GetValueByKey(key string) interface{} {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetValueByKey", key)
	ret0, _ := ret[0].(interface{})
	return ret0
}

// GetValueByKey indicates an expected call of GetValueByKey.
func (mr *MockConfigurationSourceMockRecorder) GetValueByKey(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetValueByKey", reflect.TypeOf((*MockConfigurationSource)(nil).GetValueByKey), key)
}
